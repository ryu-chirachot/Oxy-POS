import React, { useState } from "react";
import {
  Search,
  FileText,
  Printer,
  CreditCard,
  Wallet,
  QrCode,
  X,
  TicketPercent,
} from "lucide-react";

export default function AdminReceiptHistory() {
  const [search, setSearch] = useState("");
  const [filterMethod, setFilterMethod] = useState("‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î");
  const [showModal, setShowModal] = useState(false);
  const [selectedReceipt, setSelectedReceipt] = useState(null);

  const [receipts] = useState([
    {
      id: "RC1001",
      orderId: "ORD1001",
      customer: "‡∏™‡∏°‡∏ä‡∏≤‡∏¢",
      zone: "‡∏ö‡∏≤‡∏£‡πå",
      table: "3",
      total: 480,
      method: "‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏î",
      date: "12 ‡∏ï.‡∏Ñ. 2568 18:45",
      coupon: null, // ‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏π‡∏õ‡∏≠‡∏á
      items: [
        { name: "‡πÄ‡∏ö‡∏µ‡∏¢‡∏£‡πå‡∏•‡∏µ‡πÇ‡∏≠", qty: 2, price: 80 },
        { name: "‡∏°‡∏±‡∏ô‡∏ù‡∏£‡∏±‡πà‡∏á‡∏ó‡∏≠‡∏î", qty: 1, price: 120 },
        { name: "‡∏ô‡πâ‡∏≥‡πÅ‡∏Ç‡πá‡∏á", qty: 1, price: 50 },
      ],
    },
    {
      id: "RC1002",
      orderId: "ORD1002",
      customer: "‡∏à‡∏¥‡∏ï",
      zone: "‡∏•‡∏≤‡∏ô‡πÅ‡∏Ñ‡∏°‡∏õ‡πå‡∏õ‡∏¥‡πâ‡∏á",
      table: "2",
      total: 920,
      method: "QR Code",
      date: "12 ‡∏ï.‡∏Ñ. 2568 19:15",
      coupon: { code: "OXY12478", discountPercent: 10 },
      items: [
        { name: "‡∏´‡∏°‡∏π‡∏Å‡∏£‡∏∞‡∏ó‡∏∞", qty: 2, price: 350 },
        { name: "‡πÇ‡∏Ñ‡πâ‡∏Å‡∏Ç‡∏ß‡∏î", qty: 2, price: 80 },
        { name: "‡∏ô‡πâ‡∏≥‡πÅ‡∏Ç‡πá‡∏á", qty: 1, price: 60 },
      ],
    },
    {
      id: "RC1003",
      orderId: "ORD1003",
      customer: "‡∏≠‡∏£‡∏∏‡∏ì",
      zone: "‡∏£‡πâ‡∏≤‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£",
      table: "16",
      total: 1250,
      method: "‡∏ö‡∏±‡∏ï‡∏£‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï",
      date: "13 ‡∏ï.‡∏Ñ. 2568 20:00",
      coupon: { code: "NEW50", discountAmount: 50 },
      items: [
        { name: "‡∏õ‡∏•‡∏≤‡∏Å‡∏£‡∏∞‡∏û‡∏á‡∏ó‡∏≠‡∏î‡∏ô‡πâ‡∏≥‡∏õ‡∏•‡∏≤", qty: 1, price: 450 },
        { name: "‡∏ï‡πâ‡∏°‡∏¢‡∏≥‡∏£‡∏ß‡∏°‡∏°‡∏¥‡∏ï‡∏£", qty: 1, price: 300 },
        { name: "‡∏Ç‡πâ‡∏≤‡∏ß‡∏™‡∏ß‡∏¢", qty: 2, price: 50 },
        { name: "‡∏ä‡∏≤‡πÄ‡∏¢‡πá‡∏ô", qty: 2, price: 100 },
      ],
    },
  ]);

  const filtered = receipts.filter((r) => {
    const text = search.toLowerCase();
    const matchSearch =
      r.id.toLowerCase().includes(text) ||
      r.customer.toLowerCase().includes(text) ||
      r.zone.toLowerCase().includes(text) ||
      r.table.toLowerCase().includes(text) ||
      r.orderId.toLowerCase().includes(text);
    const matchMethod =
      filterMethod === "‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î" ? true : r.method === filterMethod;
    return matchSearch && matchMethod;
  });

  const getPaymentIcon = (method) => {
    switch (method) {
      case "‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏î":
        return <Wallet className="inline mr-1 text-green-600" size={16} />;
      case "QR Code":
        return <QrCode className="inline mr-1 text-blue-600" size={16} />;
      case "‡∏ö‡∏±‡∏ï‡∏£‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï":
        return <CreditCard className="inline mr-1 text-purple-600" size={16} />;
      default:
        return <FileText className="inline mr-1 text-gray-600" size={16} />;
    }
  };

  const openReceipt = (r) => {
    setSelectedReceipt(r);
    setShowModal(true);
  };

  // ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î‡∏Ñ‡∏π‡∏õ‡∏≠‡∏á
  const getDiscountValue = (receipt) => {
    const { coupon, total } = receipt;
    if (!coupon) return 0;
    if (coupon.discountPercent) return (total * coupon.discountPercent) / 100;
    if (coupon.discountAmount) return coupon.discountAmount;
    return 0;
  };

  return (
    <div className="p-6">
      <h1 className="text-3xl font-bold text-slate-800 mb-6 flex items-center gap-2">
        <FileText size={30} className="text-amber-500" />
        ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à
      </h1>

      {/* üîç Search + Filter */}
      <div className="card p-4 mb-6 grid grid-cols-1 md:grid-cols-3 gap-3">
        <div className="md:col-span-2 flex items-center gap-2">
          <Search size={18} className="text-slate-500" />
          <input
            type="text"
            value={search}
            onChange={(e) => setSearch(e.target.value)}
            placeholder="‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à / ‡∏ä‡∏∑‡πà‡∏≠‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ / ‡πÇ‡∏ã‡∏ô / ‡πÇ‡∏ï‡πä‡∏∞"
            className="w-full border border-slate-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-amber-500"
          />
        </div>

        <div>
          <select
            value={filterMethod}
            onChange={(e) => setFilterMethod(e.target.value)}
            className="w-full border border-slate-300 rounded-lg px-3 py-2 bg-white focus:outline-none focus:ring-2 focus:ring-amber-500"
          >
            {["‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î", "‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏î", "QR Code", "‡∏ö‡∏±‡∏ï‡∏£‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï"].map((m) => (
              <option key={m} value={m}>
                {m}
              </option>
            ))}
          </select>
        </div>

        <div className="md:col-span-3 text-right text-sm text-slate-500">
          ‡∏û‡∏ö‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î {filtered.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
        </div>
      </div>

      {/* üìÑ ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• */}
      <div className="card p-6">
        <div className="overflow-x-auto">
          <table className="w-full text-sm border-collapse">
            <thead className="bg-slate-50 border-b">
              <tr>
                <th className="text-left p-3">Receipt ID</th>
                <th className="text-left p-3">Order ID</th>
                <th className="text-left p-3">‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤</th>
                <th className="text-left p-3">‡πÇ‡∏ã‡∏ô / ‡πÇ‡∏ï‡πä‡∏∞</th>
                <th className="text-left p-3">‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°</th>
                <th className="text-left p-3">‡∏ß‡∏¥‡∏ò‡∏µ‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô</th>
                <th className="text-left p-3">‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà</th>
                <th className="text-right p-3">‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£</th>
              </tr>
            </thead>
            <tbody>
              {filtered.length === 0 ? (
                <tr>
                  <td colSpan={8} className="text-center py-8 text-slate-400">
                    ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤
                  </td>
                </tr>
              ) : (
                filtered.map((r) => (
                  <tr
                    key={r.id}
                    className="border-b hover:bg-slate-50 cursor-pointer"
                    onClick={() => openReceipt(r)}
                  >
                    <td className="p-3 font-mono text-slate-700">{r.id}</td>
                    <td className="p-3 font-mono text-slate-700">{r.orderId}</td>
                    <td className="p-3">{r.customer}</td>
                    <td className="p-3">
                      {r.zone} / <span className="font-semibold">{r.table}</span>
                    </td>
                    <td className="p-3 font-semibold text-amber-700">
                        ‡∏ø
                        {(
                            r.total -
                            (r.coupon ? getDiscountValue(r) : 0)
                        ).toLocaleString(undefined, { minimumFractionDigits: 2 })}
                        </td>

                    <td className="p-3">
                      {getPaymentIcon(r.method)}
                      {r.method}
                    </td>
                    <td className="p-3 whitespace-nowrap">{r.date}</td>
                    <td className="p-3 text-right">
                      <button
                        onClick={(e) => {
                          e.stopPropagation();
                          openReceipt(r);
                        }}
                        className="btn text-xs px-3 border border-slate-300 hover:bg-slate-100 text-slate-700 flex items-center gap-1 ml-auto"
                      >
                        ‡∏î‡∏π‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à
                      </button>
                    </td>
                  </tr>
                ))
              )}
            </tbody>
          </table>
        </div>
      </div>

      {/* üßæ Receipt Modal */}
      {showModal && selectedReceipt && (
        <div className="fixed inset-0 bg-black/30 backdrop-blur-sm flex items-center justify-center p-4 z-50">
          <div className="bg-white w-full max-w-lg rounded-2xl shadow-2xl p-8 relative text-[15px]">
            <button
              onClick={() => setShowModal(false)}
              className="absolute top-4 right-4 text-gray-500 hover:text-red-500"
            >
              <X size={22} />
            </button>

            {/* Header */}
            <div className="text-center border-b pb-4 mb-4">
              <h2 className="font-bold text-2xl text-slate-800">OXYFINE POS </h2>
              <p className="text-sm text-gray-600 leading-tight">
                123 ‡∏ñ‡∏ô‡∏ô‡∏°‡∏¥‡∏ï‡∏£‡∏†‡∏≤‡∏û ‡∏Ç‡∏≠‡∏ô‡πÅ‡∏Å‡πà‡∏ô <br /> ‡πÇ‡∏ó‡∏£. 081-234-5678
              </p>
            </div>

            {/* Info */}
            <div className="text-gray-700 mb-4">
              <p>‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà: <span className="font-semibold">{selectedReceipt.id}</span></p>
              <p>‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠: <span className="font-semibold">{selectedReceipt.orderId}</span></p>
              <p>‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤: <span className="font-semibold">{selectedReceipt.customer}</span></p>
              <p>‡πÇ‡∏ã‡∏ô: {selectedReceipt.zone} / ‡πÇ‡∏ï‡πä‡∏∞ {selectedReceipt.table}</p>
              <p>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: {selectedReceipt.date}</p>
            </div>

            {/* Items */}
            <table className="w-full text-sm mb-4">
              <thead className="border-b text-gray-600">
                <tr>
                  <th className="text-left">‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</th>
                  <th>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô</th>
                  <th className="text-right">‡∏£‡∏≤‡∏Ñ‡∏≤</th>
                </tr>
              </thead>
              <tbody>
                {selectedReceipt.items.map((item, i) => (
                  <tr key={i}>
                    <td className="py-1">{item.name}</td>
                    <td className="text-center">{item.qty}</td>
                    <td className="text-right">
                      ‡∏ø{(item.price * item.qty).toLocaleString()}
                    </td>
                  </tr>
                ))}
              </tbody>
            </table>

            {/* Total Section */}
            <div className="border-t pt-3 text-[15px]">
              <div className="flex justify-between">
                <span>‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°</span>
                <span>‡∏ø{selectedReceipt.total.toLocaleString()}</span>
              </div>

              {/* ‚úÖ ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏Ñ‡∏π‡∏õ‡∏≠‡∏á */}
              {selectedReceipt.coupon && (
                <div className="flex justify-between text-green-700 font-medium mt-1">
                  <span className="flex items-center gap-1">
                    <TicketPercent size={16} /> ‡∏Ñ‡∏π‡∏õ‡∏≠‡∏á {selectedReceipt.coupon.code}
                  </span>
                  <span>
                    ‚àí‡∏ø{getDiscountValue(selectedReceipt).toLocaleString()}
                  </span>
                </div>
              )}

              {/* Final Total */}
              <div className="flex justify-between font-bold text-slate-800 border-t pt-3 mt-2 text-lg">
                <span>‡∏¢‡∏≠‡∏î‡∏™‡∏∏‡∏ó‡∏ò‡∏¥</span>
                <span>
                  ‡∏ø
                  {(
                    selectedReceipt.total -
                    getDiscountValue(selectedReceipt)
                  ).toLocaleString(undefined, { minimumFractionDigits: 2 })}
                </span>
              </div>

              <div className="mt-2 text-sm text-gray-600 flex justify-between">
                <span>‡∏ß‡∏¥‡∏ò‡∏µ‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô</span>
                <span className="font-semibold">{selectedReceipt.method}</span>
              </div>
            </div>
          </div>
        </div>
      )}
    </div>
  );
}
